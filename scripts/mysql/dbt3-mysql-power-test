#!/bin/bash
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003-2006 Jenny Zhang
#               2003-2006 Open Source Development Labs, Inc.
#               2014      Mark Wong
#               2014      2ndQuadrant, Ltd.
#

EXPLAIN_ANALYZE=0
USE_OPROFILE=0
NO_REFRESH=0

# process the command line parameters
while getopts "ef:p:o:s:yz" opt; do
	case $opt in
		e) EXPLAIN_ANALYZE=1
			;;
		f) SCALE_FACTOR=$OPTARG
			;;
		o) OUTPUT_DIR=$OPTARG
		   RESULTSDIR="$OUTPUT_DIR/results"
		   mkdir -p $RESULTSDIR
			;;
		p) PARAMETERS="${POWER_PARAMETERS} $OPTARG"
			;;
		s) SEED_FILE=$OPTARG
			;;
		y) USE_OPROFILE=1
			;;
		z) NO_REFRESH=1
			;;
		?) echo "Usage: $0 -f <SCALE_FACTOR> [-e -p <db_params> -t <tag> -y]"
			exit ;;
		esac
done

RUNDIR=$OUTPUT_DIR/run
mkdir -p $RUNDIR

# Generate queries for the Power test.
read SEED < $SEED_FILE
echo "Seed : $SEED" > $OUTPUT_DIR/readme.txt

# Get the EXPLAIN plans for only the SELECT statements.
PLANDIR=$OUTPUT_DIR/plans
echo "Getting EXPLAIN plans..."
mkdir -p $PLANDIR
i=1
while [ $i -le 22 ]
do
	# Remember the query planned is in the order determined by the seed.
	Q=`$QGEN -c -r $SEED -p 0 -s $SCALE_FACTOR -x $i`
	N=`echo $Q | sed -n -r 's/.*\(#\)([[:digit:]]+)\..*/\1/p'`
	cat << __EOF__ > $PLANDIR/$N.txt
$Q
__EOF__
	mysql -u root -D $DBNAME << __EOF__ >> $PLANDIR/$N.txt
$Q
__EOF__
    i=$(( $i + 1 ))
done

dbt3-mysql-stop-db
dbt3-mysql-start-db -o $OUTPUT_DIR

# Start collecting system statistics.
dbt3-sysstats --outdir $OUTPUT_DIR --sample 60 || exit 1

# Collect database statistics
dbt3-mysql-dbstat ${OUTPUT_DIR} 2> /dev/null &

# Clear the read profile counters.
if [ -f /proc/profile ]; then
	clearprof
fi

# Clear the oprofile counters.
if [ $USE_OPROFILE -eq 1 ]; then
	clearoprof
fi

s_time_power=`date +%s`
dbt3-mysql-time-statistics -s -n "PERF.POWER" || exit 1

dbt3-mysql-time-statistics -s -n "PERF.POWER.RF1" || exit 1
if [ ${NO_REFRESH} -eq 0 ]; then
	# Refresh Stream 1
	echo "`date`: Power Test : Starting Refresh Stream 1" 
	s_time=`date +%s`
	dbt3-mysql-rf1 $SCALE_FACTOR > $RESULTSDIR/rf1.txt 2>&1
	DATASET=$?
	if [ $DATASET -lt 1 ]; then
		exit 1
	fi
	e_time=`date +%s`
	echo "`date`: Power Test : Refresh Stream 1 completed." 
	diff_time=$(( $e_time - $s_time ))
fi
dbt3-mysql-time-statistics -e -n "PERF.POWER.RF1" || exit 1

# Execute the queries.
i=1
while [ $i -le 22 ]
do
	Q=`$QGEN -c -r $SEED -p 0 -s $SCALE_FACTOR $i`
	N=`echo $Q | sed -n -r 's/.*\(#\)([[:digit:]]+)\..*/\1/p'`
	TASK="PERF.POWER.Q$N"
	cat << __EOF__ > $RESULTSDIR/$N.txt
$Q
__EOF__
	dbt3-mysql-time-statistics -s -n $TASK || exit 1
	mysql -u root -D $DBNAME << __EOF__ >> $RESULTSDIR/$N.txt
$Q
__EOF__
	dbt3-mysql-time-statistics -e -n $TASK || exit 1
    i=$(( $i + 1 ))
done

dbt3-mysql-time-statistics -s -n "PERF.POWER.RF2" || exit 1
if [ ${NO_REFRESH} -eq 0 ]; then
	# Refresh Stream 2
	echo "`date`: Power Test : Starting Refresh Stream 2" 
	s_time=`date +%s`
	dbt3-mysql-rf2 $DATASET > $RESULTSDIR/rf2.txt 2>&1 || exit 1
	e_time=`date +%s`
	echo "`date`: Power Test : Refresh Stream 2 completed." 
	diff_time=$(( $e_time - $s_time ))
fi
dbt3-mysql-time-statistics -e -n "PERF.POWER.RF2" || exit 1

dbt3-mysql-time-statistics -e -n "PERF.POWER" || exit 1
e_time_power=`date +%s`
echo "`date`: Power Test completed."
diff_time=$(( $e_time_power - $s_time_power ))
echo "Elapsed time for Power Test : $diff_time seconds"

# Stop collecting system statistics.
echo "Stopping system statistics"
read SARPID < $OUTPUT_DIR/sar.pid
kill $SARPID
read PIDSTATPID < $OUTPUT_DIR/pidstat.pid
kill $PIDSTATPID
#read DBSTATPID < $OUTPUT_DIR/dbstat.pid
#kill $DBSTATPID

dbt3-mysql-stop-db

if [ -f /proc/profile ]; then
	profname="Power_Test"
	getprof
fi

if [ $USE_OPROFILE -eq 1 ]; then
	profname="Power_Test"
	getoprof
fi

echo "Finishing the power test...";

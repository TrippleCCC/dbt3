#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003-2006 Open Source Development Labs, Inc.
#               2003-2006 Jenny Zhang
#               2005-2014 Mark Wong
#               2014      2ndQuadrant, Ltd.
#
set -x
record_start()
{
	NAME=$1

	psql -v ON_ERROR_STOP=1 -X -q << __EOF__ > /dev/null 2>&1
INSERT INTO time_statistics (task_name, s_time)
VALUES ('${NAME}', CURRENT_TIMESTAMP);
__EOF__
}

record_end()
{
	NAME=$1

	psql -v ON_ERROR_STOP=1 -X -q << __EOF__ > /dev/null 2>&1
UPDATE time_statistics
SET e_time = current_timestamp
WHERE task_name = '${NAME}';
__EOF__
}

if [ $# -ne 5 ]; then
        echo "Usage: $0 <scale_factor> <perf_run_num> <stream_num> <0/1 - explain analyze off/on> <run dir> <seed file>"
        exit 1
fi

SCALE_FACTOR=$1
stream_num=$2
EXPLAIN_ANALYZE=$3
OUTPUT_DIR=$4
SEED_FILE=$5

PSQL="psql -v ON_ERROR_STOP=1 -X -e"
RUNDIR=$OUTPUT_DIR/run
RESULTSDIR="${OUTPUT_DIR}/results/${stream_num}"
mkdir -p ${RESULTSDIR} || exit 1

# output PID to a tmp file
echo "$$" > $RUNDIR/PID$stream_num

if [ ! -f $SEED_FILE ]; then
	echo "creating seed file $SEED_FILE, you can change the seed by "
	echo "modifying this file"
	$SRCDIR/scripts/init_seed.sh > $SEED_FILE
fi
SEED=`cat ${SEED_FILE}`
SEED=$(( ${SEED} + ${stream_num} ))

if [ $EXPLAIN_ANALYZE -eq 1 ]; then
	EXPLAIN_ARG="-y"
fi

# get the execution plan for each query of each query stream
PLANDIR=${OUTPUT_DIR}/plans/${stream_num}
mkdir -p ${PLANDIR} || exit 1

i=1
while [ $i -le 22 ]
do
	# Remember the query planned is in the order determined by the seed.
	Q=`${QGEN} -c -r ${SEED} -p ${stream_num} -s ${SCALE_FACTOR} -x ${i}`
	N=`echo ${Q} | sed -n -r 's/.*\(#\)([[:digit:]]+)\..*/\1/p'`
	${PSQL} << __EOF__ > ${PLANDIR}/${N}.txt
${Q}
__EOF__
	i=$(( $i + 1 ))
done

# run the queries
echo "`date`: start throughput queriy stream $stream_num "
s_time=`date +%s`
STREAMTASK="PERF.THRUPUT.QS${stream_num}.ALL"
record_start "${STREAMTASK}" || exit 1
i=1
while [ ${i} -le 22 ]; do
	Q=`${QGEN} -c -r ${SEED} -p ${stream_num} -s ${SCALE_FACTOR} ${EXPLAIN_ARG} ${i}`
	N=`echo ${Q} | sed -n -r 's/.*\(#\)([[:digit:]]+)\..*/\1/p'`
	TASK="PERF.THRUPUT.QS${stream_num}.Q${N}"
	record_start "${TASK}" || exit 1
	${PSQL} << __EOF__ > ${RESULTSDIR}/${N}.txt
${Q}
__EOF__
	record_end "${TASK}" || exit 1
	i=$(( ${i} + 1 ))
done
record_end "${STREAMTASK}" || exit 1
e_time=`date +%s`
echo "`date`: end throughput query stream ${stream_num}"
diff_time=$(( $e_time - $s_time ))
echo "elapsed time for throughput query stream ${stream_num}: $diff_time sec"

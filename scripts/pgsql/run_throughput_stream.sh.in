#!/bin/sh
#
# run_throughput_stream.sh: run throughput query stream
#
# This file is released under the terms of the Artistic License.  Please see
# the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003 Open Source Development Lab, Inc.
#
# History: June-13-2003 Created by Jenny Zhang

SRCDIR=@TOPDIR@

if [ $# -ne 5 ]; then
        echo "Usage: $0 <scale_factor> <perf_run_num> <stream_num> <0/1 - explain analyze off/on> <run dir>"
        exit 1
fi

scale_factor=$1
perf_run_num=$2
stream_num=$3
EXPLAIN_ANALYZE=$4
OUTPUT_DIR=$5
RUNDIR=$OUTPUT_DIR/run

GTIME="$SRCDIR/dbdriver/utils/gtime"
QGEN="$SRCDIR/datagen/dbgen/qgen"

DBSCRIPTDIR=$SRCDIR/scripts/pgsql
seed_file="$RUNDIR/seed"
query_file="$RUNDIR/throughput_query$stream_num"
tmp_query_file="$RUNDIR/tmp_throughput_query$stream_num.sql"
param_file="$RUNDIR/throughput_param$stream_num"
parsequery_dir="$SRCDIR/dbdriver/utils"

# output PID to a tmp file
echo "$$" > $RUNDIR/PID$stream_num

if [ ! -f $seed_file ];
then
        echo "creating seed file $seed_file, you can change the seed by "
	echo "modifying this file"
	bash $SRCDIR/scripts/init_seed.sh > $seed_file
fi

seed=`cat $seed_file`

let "seed = $seed + $stream_num"
# generate the queries for thoughput test
rm -f $query_file
rm -f $tmp_query_file
if [ $EXPLAIN_ANALYZE -eq 0 ]
then
	$QGEN -c -r $seed -p $stream_num -s $scale_factor -l $param_file> $query_file
else
	$QGEN -c -r $seed -p $stream_num -s $scale_factor -l $param_file -y > $query_file
fi
# modify $query_file so that the commands are in one line
$parsequery_dir/parse_query $query_file $tmp_query_file T $perf_run_num $stream_num

# get the execution plan for each query
mkdir -p $RUNDIR/plan
i=1
while [ $i -le 22 ]
do
	if [ $i -ne 15 ]; then
		bash $DBSCRIPTDIR/get_query_plan.sh $scale_factor $i $RUNDIR/plan/throughput_stream${stream_num}_query$i.txt $RUNDIR
	fi
	let "i=$i+1"
done

# run the queries
echo "`date`: start throughput queries for stream $stream_num "
s_time=`$GTIME`
bash $DBSCRIPTDIR/record_start.sh -n "PERF${perf_run_num}.THRUPUT.QS${stream_num}.ALL"
# You can't use -a and have the query redirected to a file with -o, so use -a
# and redirect.
@PSQL@ $SID -f $tmp_query_file -a >> $OUTPUT_DIR/results/thruput_qs${stream_num}.result 2>&1 || exit 1
bash $DBSCRIPTDIR/record_end.sh -n "PERF${perf_run_num}.THRUPUT.QS${stream_num}.ALL"
e_time=`$GTIME`
echo "`date`: end queries "
let "diff_time=$e_time-$s_time"
echo "elapsed time for queries $diff_time"

exit 0

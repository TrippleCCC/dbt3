#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2002-2008 Open Source Development Labs, Inc.
#               2002-2014 Mark Wong
#               2014      2ndQuadrant, Ltd.

# dont start script as root!
id=`id | sed s/\(.*// | sed s/uid=//`

if [ "$id" = "0" ]; then
	echo "dont start script as root"
	exit 1
fi

if [ -z ${PGDATA} ]; then
    echo "PGDATA not defined."
    exit 1
fi

if [ -z ${PGDATABASE} ]; then
    echo "PGDATABASE environment variable not defined"
    exit 1
fi

PSQL="psql -X -d postgres -v ON_ERROR_STOP=1"

XLOGPATH=""
OUTPUT_DIR="."
NODES=1
while getopts "o:p:x:" OPT; do
	case ${OPT} in
	o)
		OUTPUT_DIR=${OPTARG}
		;;
	p)
		PARAMOPT="-p \"$OPTARG\""
		;;
	x)
		XLOGPATH=${OPTARG}
		;;
	\?)
		exit 1
		;;
	esac
done

dbt3-pgsql-stop-db

SKIP=0
echo "Creating database..."
if [ -d ${PGDATA} ]; then
	echo "PGData directory '${PGDATA}' already exists, skipping initdb..."
	SKIP=1
else
	echo "initializing database cluster..."

	initdb -D $COORDINATORDATA --nodename coordinator || exit 1
	echo "host all all 0.0.0.0/0 trust" >> $COORDINATORDATA/pg_hba.conf || exit 1
	echo "host all all ::/0 trust" >> $COORDINATORDATA/pg_hba.conf || exit 1
	i=1
	for HOSTNAME in $HOSTNAMES; do
		ssh $HOSTNAME << __EOF__
#initdb -D $COORDINATORDATA.$i --nodename coordinator_$i || exit 1
#echo "host all all 0.0.0.0/0 trust" >> $COORDINATORDATA.$i/pg_hba.conf || exit 1
#echo "host all all ::/0 trust" >> $COORDINATORDATA.$i/pg_hba.conf || exit 1
initdb -D $DATANODEDATA$i --nodename datanode_$i || exit 1
echo "host all all 0.0.0.0/0 trust" >> $DATANODEDATA$i/pg_hba.conf || exit 1
echo "host all all ::/0 trust" >> $DATANODEDATA$i/pg_hba.conf || exit 1
initgtm -D $GTMPROXYDATA$i -Z gtm_proxy || exit 1
__EOF__
		if [ $? -ne 0 ]; then
			exit 1
		fi

		i=$(( $i + 1 ))
	done
	initgtm -D $GTMDATA -Z gtm
fi

eval dbt3-pgsql-start-db -o $OUTPUT_DIR $PARAMOPT
if [ $SKIP -eq 1 ]; then
	exit 0
fi

echo "Adding coordinators to coordinators..."
$PSQL << __EOF__
ALTER NODE coordinator WITH (TYPE = 'coordinator', HOST = '$GTMHOST');
__EOF__
if [ $? -ne 0 ]; then
	exit 1
fi

#i=1
#for HOSTNAME in $HOSTNAMES; do
#	$PSQL <<__EOF__
#CREATE NODE coordinator_$i WITH (TYPE = 'coordinator', HOST = '$HOSTNAME');
#__EOF__
#	if [ $? -ne 0 ]; then
#		exit 1
#	fi
#	i=$(( $i + 1 ))
#done

#i=1
#for HOSTNAME in $HOSTNAMES; do
#	$PSQL -h $HOSTNAME << __EOF__
#CREATE NODE coordinator WITH (TYPE = 'coordinator', HOST = '$GTMHOST');
#__EOF__
#	if [ $? -ne 0 ]; then
#		exit 1
#	fi

#	j=1
#	for NODENAME in $HOSTNAMES; do
#		if [ $i -eq $j ]; then
#			$PSQL -h $HOSTNAME <<__EOF__
#ALTER NODE coordinator_$j WITH (TYPE = 'coordinator', HOST = '$NODENAME');
#__EOF__
#			if [ $? -ne 0 ]; then
#				exit 1
#			fi
#		else
#			$PSQL -h $HOSTNAME << __EOF__
#CREATE NODE coordinator_$j WITH (TYPE = 'coordinator', HOST = '$NODENAME');
#__EOF__
#			if [ $? -ne 0 ]; then
#				exit 1
#			fi
#		fi
#		j=$(( $j + 1 ))
#	done
#	i=$(( $i + 1 ))
#done

echo "Adding datanodes to coordinators..."
i=1
for HOSTNAME in $HOSTNAMES; do
	$PSQL <<__EOF__
CREATE NODE datanode_$i
WITH (TYPE = 'datanode', HOST = '$HOSTNAME');
__EOF__
	if [ $? -ne 0 ]; then
		exit 1
	fi
	i=$(( $i + 1 ))
done

#for HOSTNAME in $HOSTNAMES; do
#	i=1
#	for NODENAME in $HOSTNAMES; do
#		$PSQL -h $HOSTNAME << __EOF__
#CREATE NODE datanode_$i
#WITH (TYPE = 'datanode', HOST = '$NODENAME', PORT = $DATANODEPORT);
#__EOF__
#		if [ $? -ne 0 ]; then
#			exit 1
#		fi
#		i=$(( $i + 1 ))
#	done
#done

echo "Adding coordinators to datanodes..."
i=1
for HOSTNAME in $HOSTNAMES; do
	$PSQL << __EOF__
EXECUTE DIRECT ON (datanode_$i)
'CREATE NODE coordinator WITH (TYPE = ''coordinator'', HOST = ''$GTMHOST'')';
__EOF__
	if [ $? -ne 0 ]; then
		exit 1
	fi

#	j=1
#	for NODENAME in $HOSTNAMES; do
#		$PSQL -h $HOSTNAME << __EOF__
#EXECUTE DIRECT ON (datanode_$i)
#'CREATE NODE coordinator_$j
# WITH (TYPE = ''coordinator'', HOST = ''$NODENAME'')';
#__EOF__
#		if [ $? -ne 0 ]; then
#			exit 1
#		fi
#		j=$(( $j + 1 ))
#	done
	i=$(( $i + 1 ))
done

echo "Adding datanodes to datanodes..."
i=1
for HOSTNAME in $HOSTNAMES; do
	j=1
	for NODENAME in $HOSTNAMES; do
		if [ $i -eq $j ]; then
			$PSQL << __EOF__
EXECUTE DIRECT ON (datanode_$i)
'ALTER NODE datanode_$j
 WITH (TYPE = ''datanode'', HOST = ''$NODENAME'')';
__EOF__
			if [ $? -ne 0 ]; then
				exit 1
			fi
		else
			$PSQL << __EOF__
EXECUTE DIRECT ON (datanode_$i)
'CREATE NODE datanode_$j
WITH (TYPE = ''datanode'', HOST = ''$NODENAME'')';
__EOF__
			if [ $? -ne 0 ]; then
				exit 1
			fi
		fi
		j=$(( $j + 1 ))
	done
	i=$(( $i + 1 ))
done

$PSQL -c "SELECT pgxc_pool_reload();" || exit 1
i=1
for HOSTNAME in $HOSTNAMES; do
#	$PSQL -h $HOSTNAME << __EOF__
#SELECT pgxc_pool_reload();
#__EOF__
#	if [ $? -ne 0 ]; then
#		exit 1
#	fi
	$PSQL -h $HOSTNAME << __EOF__
SELECT pgxc_pool_reload();
__EOF__
	if [ $? -ne 0 ]; then
		exit 1
	fi
	i=$(( $i + 1 ))
done

createdb $PGDATABASE || exit 1

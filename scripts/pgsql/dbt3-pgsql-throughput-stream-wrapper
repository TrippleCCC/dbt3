#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see # the file LICENSE, included in this package, for details.
#
# Copyright (C) 2004      Open Source Development Labs, Inc.
#               2004       Jenny Zhang
#               2004-2014 Mark Wong
#               2014      2ndQuadrant, Ltd.
#

record_start()
{
	NAME=$1

	psql -v ON_ERROR_STOP=1 -X -q << __EOF__ > /dev/null 2>&1
INSERT INTO time_statistics (task_name, s_time)
VALUES ('${NAME}', CURRENT_TIMESTAMP);
__EOF__
}

record_end()
{
	NAME=$1

	psql -v ON_ERROR_STOP=1 -X -q << __EOF__ > /dev/null 2>&1
UPDATE time_statistics
SET e_time = current_timestamp
WHERE task_name = '${NAME}';
__EOF__
}

NO_REFRESH=0
while getopts "ef:n:o:s:Yz" opt; do
	case $opt in
	e) EXPLAIN_ARG="-y"
		;;
	f) scale_factor=$OPTARG
		;;
	n) num_stream=$OPTARG
		;;
	o) OUTPUT_DIR=$OPTARG
		;;
	s) SEED_FILE=$OPTARG
		;;
	Y) LINUXPERF_ARG="-Y"
		;;
	z) NO_REFRESH=1
		;;
	esac
done

RUNDIR=$OUTPUT_DIR/run

# Start each stream.
i=1
while [ $i -le $num_stream ] 
do
	dbt3-pgsql-throughput-stream \
			-f ${scale_factor} \
			-t ${i} \
			${EXPLAIN_ARG} \
			${LINUXPERF_ARG} \
			-o ${OUTPUT_DIR} \
			-s ${SEED_FILE} > ${RUNDIR}/thruput_qs${i} 2>&1 &
	
	i=$(( $i + 1 ))
done

stream_num=1
while [ $stream_num -le $num_stream ]; do
	STREAM="PERF.THRUPUT.RFST$stream_num"
	RF1TASK="PERF.THRUPUT.RFST$stream_num.RF1"
	RF2TASK="PERF.THRUPUT.RFST$stream_num.RF2"
	RF1OUT="$OUTPUT_DIR/results/$stream_num/rf1.txt"
	RF2OUT="$OUTPUT_DIR/results/$stream_num/rf2.txt"

	# Directories may not be created before the query is executed.
	mkdir -p $OUTPUT_DIR/results/$stream_num

	record_start "$STREAM" || exit 1

	record_start "$RF1TASK" || exit 1
	if [ $NO_REFRESH -eq 0 ]; then
		echo "`date`: Throughput Stream $stream_num: Starting RF 1..."
		s_time_rf1=`date +%s`
		dbt3-pgsql-rf1 $scale_factor > $RF1OUT 2>&1
		DATASET=$?
		if [ $DATASET -lt 1 ]; then
			exit 1
		fi
		e_time_rf1=`date +%s`
		diff_time_rf1=$(( $e_time_rf1 - $s_time_rf1 ))
		echo "Throughput Stream $stream_num: Elapsed time for Refresh Stream 1: $diff_time_rf1 seconds"
	fi
	record_end "$RF1TASK" || exit 1

	echo "`date`: Throughput Stream $stream_num: Starting RF 2..."
	s_time_rf2=`date +%s`
	record_start "$RF2TASK" || exit 1
	if [ $NO_REFRESH -eq 0 ]; then
		dbt3-pgsql-rf2 $DATASET > $RF2OUT 2>&1 || exit 1
		e_time_rf2=`date +%s`
		diff_time_rf2=$(( $e_time_rf2 - $s_time_rf2 ))
		echo "Throughput Steam $stream_num: Elapsed time for RF 2: $diff_time_rf2 seconds"
	fi
	record_end "$RF2TASK" || exit 1

	record_end "$STREAM" || exit 1

	stream_num=$(( $stream_num + 1 ))
done

wait

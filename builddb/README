Perl scripts to build SAP DB database.

Prerequisite:
============
1. The scripts use two SAP DB perl modules.  
	SAPDB::DBTech::dbm: interface to database management server
	SAPDB::DBTech::repm: interface to replication management server (in 7.4, 	this becomes loader)
	

Install SAP DB dbm and repm modules:
	execute depend_path/insertperl.pl
	e.g: /opt/sapdb/depend/misc/insertperl.pl

2. Under Sapdbpms, several modules are defined.  The scripts call the functions defined in those modules.  The script has to kown where those modules are.  In each script, a line:
	use lib "$DBT3_PERL_MODULE/Sapdbpms";
defines this path.  This line has to be changed to define the Sapdbpms path.


Usage:
======
Calling the scripts with -h produces help messages.

build_db.pl: 
	Read config files for creating, loading and backing up the database
	The config files has to be in the right order
	Example: 
		build_db.pl -c create_db.conf -c load_db.conf -c backup_db.conf
		build_db.pl -f build_db.conf	

build_db.conf:
	A sample config file for build_db.pl.  

backup_db.pl:
	backup database
	Example:
		backup_db.pl -c ./cmd_files/define_medium.cmd -c ./cmd_files/backup_db.cmd -c ./cmd_files/db_kernel_run.param -u dbm -p dbm -d DBT3 -n localhost -w backup_db.conf
		backup_db.pl -f backup_db.conf

backup_db.conf:
	A sample config file for backup_db.pl.  

init_db.pl:
	read database parameters from files and create database
	Example:
		init_db.pl -c ./cmd_files/db_kernel_create.param -c ./cmd_files/db_volume.param -c ./cmd_files/db_stat.cmd -c ./cmd_files/init_db.cmd -c ./cmd_files/load_systab.cmd -u dbm -p dbm -n localhost -d DBT3 -w init_db.conf
		init_db.pl -f init_db.conf
	
init_db.conf 	
	A sample config file for init_db.pl.  

load_db.pl:
	create and load tables
	Example:
		load_db.pl -c ./cmd_files/create_tables_repm.sql -c ./cmd_files/load_tables_repm.sql -c ./cmd_files/update_statistics_repm.sql -u dbt -p dbt -n localhost -d DBT3 -w load_db.conf
		load_db.pl -f load_db.conf

load_db.conf 	
	A sample config file for load_db.pl.  

drop_db.sh: shell scropts to drop database.  This file is required. (see the next session)

mytestdbi.pl: a test program to use dbi, dbd::odbc. 
	'The modules DBD::SAP_DB and SAP::DBTech::sapdb are not maintained any
	 more. We recommend to use DBD::ODBC instead'
	I did not use this, but would like to keep a sample here	

Note:  The files under cmd_files define the database.  These need to be tailored.

Know problem and workaround:
===========================
I could not figure out how the avoid requiring logging to local system when create database using dbm modules.  So I use a system call (dbmcli) instead.  The reply from SAP DB is this will be fixed in version 7.4.4.

The perl script returns an error if I try to drop the database.  So I used a shell script to drop the database(drop_db.sh).  The database name should be change to your database name

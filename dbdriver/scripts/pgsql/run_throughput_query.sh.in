#
# run_throughput_query.sh: run throughput query stream
#
# This file is released under the terms of the Artistic License.  Please see
# the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003 Open Source Development Lab, Inc.
#
# History: June-13-2003 Created by Jenny Zhang
#
#!/bin/sh

if [ $# -ne 4 ]; then
        echo "Usage: $0 <scale_factor> <perf_run_num> <stream_num> <0/1 - explain analyze off/on>"
        exit
fi

scale_factor=$1
perf_run_num=$2
stream_num=$3
explain_analyze=$4
GTIME="@TOPDIR@/dbdriver/utils/gtime"

qgen_dir="@TOPDIR@/datagen/dbgen"
run_dir="@TOPDIR@/run"
seed_file="$run_dir/seed"
query_file="$run_dir/throughput_query$stream_num"
tmp_query_file="$run_dir/tmp_throughput_query$stream_num.sql"
param_file="$run_dir/throughput_param$stream_num"
parsequery_dir="@TOPDIR@/dbdriver/utils"
dbdriver_pgsql_path="@TOPDIR@/dbdriver/scripts/pgsql"

# output PID to a tmp file
echo "$$" > $run_dir/PID$stream_num

if [ ! -f $seed_file ];
then
        echo "creating seed file $seed_file, you can change the seed by modifying this file"
	/home/pgsql/dbt3/dbdriver/scripts/init_seed.sh > $seed_file
fi

seed=`cat $seed_file`

let "seed = $seed + $stream_num"
#generate the queries for power test
rm $query_file
rm $tmp_query_file
echo "generate queries in $qgen_dir"
if [ $explain_analyze -eq 0 ]
then
	$qgen_dir/qgen -c -r $seed -p $stream_num -s $scale_factor -l $param_file> $query_file
else
	$qgen_dir/qgen -c -r $seed -p $stream_num -s $scale_factor -l $param_file -y > $query_file
fi
# modify $query_file so that the commands are in one line
$parsequery_dir/parse_query $query_file $tmp_query_file T $perf_run_num $stream_num

# get the execution plan for each query
mkdir -p $run_dir/plan
i=1
while [ $i -le 22 ]
do
	if [ $i -ne 15 ]; then
		$dbdriver_pgsql_path/explain_single_query.sh $scale_factor $i $run_dir/plan/throughput_stream${stream_num}_query$i.txt
	fi
	let "i=$i+1"
done

#run the queries
echo "`date`: start throughput queries for stream $stream_num "
s_time=`$GTIME`
echo "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.QS${stream_num}', current_timestamp, $s_time)"
psql -d $SID -U $PGUSER -c "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.THRUPUT.QS${stream_num}.ALL', current_timestamp, $s_time);"
# You can't use -a and have the query redirected to a file with -o, so use -a
# and redirect.
psql $SID -f $tmp_query_file -a >> $run_dir/thuput_qs${stream_num}.result 2>&1
echo "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.THRUPUT.QS${stream_num}.ALL' and int_time=$s_time;"
psql -d $SID -U $PGUSER -c "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.THRUPUT.QS${stream_num}.ALL' and int_time=$s_time;"
e_time=`$GTIME`
echo "`date`: end queries "
let "diff_time=$e_time-$s_time"
echo "elapsed time for queries $diff_time"

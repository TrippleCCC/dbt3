#
# get_power.sh: get dbt3 query process power
#
# This file is released under the terms of the Artistic License.  Please see
# the file LICENSE, included in this package, for details.
#
# Copyright (C) 2003 Open Source Development Lab, Inc.
#
# History: June-17-2003 Created by Jenny Zhang
#
#!/bin/sh

if [ $# -ne 3 ]; then
        echo "Usage: ./run_power_test.sh <scale_factor> <perf_run_number> <0/1 - explain analyze off/on>"
        exit
fi

scale_factor=$1
perf_run_num=$2
explain_analyze=$3

qgen_dir="@TOPDIR@/datagen/dbgen"
run_dir="@TOPDIR@/run"
query_file="$run_dir/power_query"
tmp_query_file="$run_dir/tmp_query.sql"
param_file="$run_dir/power_param"
dbdriver_pgsql_path="@TOPDIR@/dbdriver/scripts/pgsql"

GTIME="@TOPDIR@/dbdriver/utils/gtime"

# get the execution plan for each query
mkdir -p $run_dir/plan
i=1
while [ $i -le 22 ]
do
	if [ $i -ne 15 ]; then
		$dbdriver_pgsql_path/explain_single_query.sh $scale_factor $i $run_dir/plan/power_query$i.txt
	fi
	let "i=$i+1"
done

echo "`date`: =======power test $perf_run_num========"

s_time_power=`$GTIME`
echo "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.POWER', current_timestamp, $s_time_power)"
psql -d $SID -U $PGUSER -c "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.POWER', current_timestamp, $s_time_power);"

#***run rf1
#get the start time
echo "`date`: start rf1 " 
s_time=`$GTIME`
echo "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.POWER.RF1', current_timestamp, $s_time)"
psql -d $SID -U $PGUSER -c "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.POWER.RF1', current_timestamp, $s_time);"
$dbdriver_pgsql_path/run_rf1.sh $scale_factor 
echo "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.POWER.RF1' and int_time=$s_time"
psql -d $SID -U $PGUSER -c "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.POWER.RF1' and int_time=$s_time;"
e_time=`$GTIME`
echo "`date`: rf1 end " 
let "diff_time=$e_time-$s_time"
echo "elapsed time for rf1 $diff_time" 

#run the queries
$dbdriver_pgsql_path/run_power_query.sh $scale_factor $perf_run_num $explain_analyze

#get the start time
echo "`date`: start rf2 " 
s_time=`$GTIME`
echo "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.POWER.RF2', current_timestamp, $s_time)"
psql -d $SID -U $PGUSER -c "insert into time_statistics (task_name, s_time, int_time) values ('PERF${perf_run_num}.POWER.RF2', current_timestamp, $s_time);"
# not execute rf2 for now wait for 7.4
#$dbdriver_pgsql_path/run_rf2.sh
echo "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.POWER.RF2' and int_time=$s_time"
psql -d $SID -U $PGUSER -c "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.POWER.RF2' and int_time=$s_time;"
e_time=`$GTIME`
echo "`date`: rf2 end " 
let "diff_time=$e_time-$s_time"
echo "elapsed time for rf2 $diff_time" 

echo "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.POWER' and int_time=$s_time_power"
psql -d $SID -U $PGUSER -c "update time_statistics set e_time=current_timestamp where task_name='PERF${perf_run_num}.POWER' and int_time=$s_time_power;"

e_time_power=`$GTIME`
echo "`date`: end power test run "
let "diff_time=$e_time_power-$s_time_power"
echo "elapsed time for power test $diff_time"

#include <stdio.h>

/* declare the host variables which are binded to sqlda */
double hostreal[10];
int hostint[5];
char hostchar40[10][41];
char hostchar117[1][118];

int sql_exec(char *statement)
{
	exec sql begin declare section;
	char stmt[1024];
	exec sql end declare section;

	strcpy(stmt,statement );

	EXEC SQL prepare dbt3_query from :stmt;
	EXEC SQL execute dbt3_query;

	EXEC SQL prepare dbt3_fetch from 'fetch using descriptor';
	EXEC SQL describe dbt3_fetch;

	/* provide the SQLDA with user information */
	set_describe_area();

	/* process the result table */
	EXEC SQL execute dbt3_fetch;
	while (sqlca.sqlcode == 0)
	{
		get_output();
		EXEC SQL execute dbt3_fetch;
	}
	return sqlca.sqlcode;
}

void set_describe_area()
{
	sqlvartype *actvar;
	int i, hostint_index, hostreal_index, hostchar40_index, hostchar117_index;

	hostint_index=0;
	hostreal_index=0;
	hostchar40_index=0;
	hostchar117_index=0;

	for (i=0; i<sqlda.sqln; i++)
	{
		actvar = &sqlda.sqlvar[i];
		switch ((*actvar).coltype)
		{
			case 0: 
				if ((*actvar).colfrac == 0)
				{
					(*actvar).hostvartype=1;
					(*actvar).hostvaraddr = &hostint[hostint_index];
					hostint_index++;
				}
				else
				{
					(*actvar).collength=18;
					(*actvar).colfrac=8;
					(*actvar).hostvartype=3;
					(*actvar).hostvaraddr = &hostreal[hostreal_index];
					hostreal_index++;
				}
				break;
			case 2: 
				(*actvar).hostvartype = 6;
				if ((*actvar).collength < 41)
				{
					(*actvar).collength = 40;
					(*actvar).hostvaraddr = hostchar40[hostchar40_index];
					hostchar40_index++;
				}
				else
				{
					(*actvar).collength = 117;
					(*actvar).hostvaraddr = hostchar117[hostchar117_index];
					hostchar117_index++;
				}
				break;
			default:
				printf("invalid type\n");
		}
	}
}

void get_output()
{
	int i;
	for (i=0; i<10; i++)
		printf("id %d: s_name %s\n", hostchar40[i]);
}
